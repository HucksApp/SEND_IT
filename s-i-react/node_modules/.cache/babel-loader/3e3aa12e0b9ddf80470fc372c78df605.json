{"ast":null,"code":"import _objectSpread from\"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import Geocode from\"react-geocode\";import toastr from'../notification/Toastr';var geocode=function geocode(_ref,obj){var field=_ref.field,val=_ref.val;Geocode.setApiKey('AIzaSyDoduk96MV36i6RJFgvo80FqZTFBZj2k1M');Geocode.setLanguage('en');Geocode.enableDebug();Geocode.fromAddress(val).then(function(res){var _res$results$0$geomet=res.results[0].geometry.location,lat=_res$results$0$geomet.lat,lng=_res$results$0$geomet.lng;var dataCopy=_objectSpread({},obj.state.data);dataCopy.order[field].lat=lat;dataCopy.order[field].lng=lng;obj.setState({data:dataCopy});},function(err){toastr.info('WE COULD LOCATE '+val+' ON THE ROUTE NOW, CHECK BACK LATER');console.log(obj.state);});};export default geocode;","map":{"version":3,"sources":["/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/controls/Geocode.js"],"names":["Geocode","toastr","geocode","obj","field","val","setApiKey","setLanguage","enableDebug","fromAddress","then","res","results","geometry","location","lat","lng","dataCopy","state","data","order","setState","err","info","console","log"],"mappings":"qIAAA,MAAOA,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAiBC,GAAjB,CAAuB,IAApBC,CAAAA,KAAoB,MAApBA,KAAoB,CAAbC,GAAa,MAAbA,GAAa,CAEnCL,OAAO,CAACM,SAAR,CAAkB,yCAAlB,EACAN,OAAO,CAACO,WAAR,CAAoB,IAApB,EACAP,OAAO,CAACQ,WAAR,GAEAR,OAAO,CAACS,WAAR,CAAoBJ,GAApB,EAAyBK,IAAzB,CAEI,SAAAC,GAAG,CAAE,2BACmBA,GAAG,CAACC,OAAJ,CAAY,CAAZ,EAAeC,QAAf,CAAwBC,QAD3C,CACOC,GADP,uBACOA,GADP,CACYC,GADZ,uBACYA,GADZ,CAED,GAAMC,CAAAA,QAAQ,kBAAOd,GAAG,CAACe,KAAJ,CAAUC,IAAjB,CAAd,CACIF,QAAQ,CAACG,KAAT,CAAehB,KAAf,EAAsBW,GAAtB,CAA4BA,GAA5B,CACAE,QAAQ,CAACG,KAAT,CAAehB,KAAf,EAAsBY,GAAtB,CAA4BA,GAA5B,CACJb,GAAG,CAACkB,QAAJ,CAAa,CACTF,IAAI,CAAEF,QADG,CAAb,EAGH,CAVL,CAWI,SAAAK,GAAG,CAAE,CACGrB,MAAM,CAACsB,IAAP,CAAY,mBAAoBlB,GAApB,CAAyB,qCAArC,EACAmB,OAAO,CAACC,GAAR,CAAYtB,GAAG,CAACe,KAAhB,EACP,CAdL,EAmBH,CAzBD,CA4BA,cAAehB,CAAAA,OAAf","sourcesContent":["import Geocode from \"react-geocode\";\nimport toastr from '../notification/Toastr';\n\n\nconst geocode = ({ field, val }, obj)=>{\n\n    Geocode.setApiKey('AIzaSyDoduk96MV36i6RJFgvo80FqZTFBZj2k1M');\n    Geocode.setLanguage('en');\n    Geocode.enableDebug();\n\n    Geocode.fromAddress(val).then(\n\n        res=>{\n            const { lat, lng} = res.results[0].geometry.location;\n            const dataCopy = {...obj.state.data}\n                dataCopy.order[field].lat = lat;\n                dataCopy.order[field].lng = lng;\n            obj.setState({\n                data: dataCopy\n            })\n        },\n        err=>{\n                toastr.info('WE COULD LOCATE '+ val +' ON THE ROUTE NOW, CHECK BACK LATER');\n                console.log(obj.state)\n        }\n\n    );\n\n\n}\n\n\nexport default geocode;\n\n"]},"metadata":{},"sourceType":"module"}