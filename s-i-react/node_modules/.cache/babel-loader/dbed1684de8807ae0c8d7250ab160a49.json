{"ast":null,"code":"import _objectSpread from \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/AdminEdit.jsx\";\nimport React, { Component } from 'react';\nexport class AdminEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        ord: {\n          userId: \"\",\n          orderId: \"\",\n          orderStatus: \"\",\n          orderLocation: \"\",\n          type: \"\"\n        },\n        class: \"closed\"\n      }\n    };\n\n    this.handleClickA = e => {\n      if (this.state.data.class === 'closed' && e.target.classList.value === 'status_tog') {\n        const dataCopy = _objectSpread({}, this.state.data);\n\n        dataCopy.class = \"open_status\";\n        this.setState({\n          data: dataCopy\n        });\n      } else if (this.state.data.class === 'open_status' && e.target.classList.value === 'status_tog') {\n        const dataCopy = _objectSpread({}, this.state.data);\n\n        dataCopy.class = \"closed\";\n        this.setState({\n          data: dataCopy\n        });\n      } else {\n        console.log(\"ERROR IN CLASS CHANGE\");\n      }\n    };\n\n    this.handleClickB = e => {\n      if (this.state.data.class === 'closed' && e.target.classList.value === 'location_tog') {\n        const dataCopy = _objectSpread({}, this.state.data);\n\n        dataCopy.class = \"open_location\";\n        this.setState({\n          data: dataCopy\n        });\n      } else if (this.state.data.class === 'open_location' && e.target.classList.value === 'location_tog') {\n        const dataCopy = _objectSpread({}, this.state.data);\n\n        dataCopy.class = \"closed\";\n        this.setState({\n          data: dataCopy\n        });\n      } else {\n        console.log(\"ERROR IN CLASS CHANGE\");\n      }\n    };\n  }\n\n  componentDidCatch() {// this.props.edit_on_form(this)\n\n    /*\n      const dataCopy = {...this.state.data};\n      if(this.props.payload){\n        dataCopy.ord.ordId = this.props.payload.ordId;\n        dataCopy.ord.userId = this.props.payload.userIdentity;\n        switch(this.props.payload.type){\n          case 'statu':\n            dataCopy.ord.type  = 'status';\n            break;\n          case 'locatn': \n            dataCopy.ord.type  =  'location';\n            break;\n          default:\n            return\n        };\n          if(this.state.data.class = 'closed'){\n              const copydata = {...this.state.data};\n              copydata.class = 'open';\n            this.setState({ data: copydata})\n    \n          }else if(this.state.data.class = 'open'){\n            const copydata = {...this.state.data};\n              copydata.class = 'closed';\n            this.setState({ data: copydata})\n          }\n          console.log(this.state)\n      } */\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"admin_edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tog_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"status_tog\",\n      onClick: this.handleClickA,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"STATUS EDIT\"), React.createElement(\"button\", {\n      className: \"location_tog\",\n      onClick: this.handleClickB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"LOCATION EDIT\")), React.createElement(\"form\", {\n      className: \"curent_location_form \" + this.state.data.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"user_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"USER ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ENTER USER ID \",\n      id: \"user_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"order_new_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"NEW LOCATION\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ENTER THE CURRENT LOCATION \",\n      id: \"user_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"order_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"ORDER ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ENTER USER ID \",\n      id: \"user_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"admin_submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"UPDATE \")), React.createElement(\"form\", {\n      action: \"\",\n      className: \"status_form \" + this.state.data.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"user_ordr_f2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"USER ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ENTER USER ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"order_id_f2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"ORDER ID\"), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"ENTER ORDER ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"\",\n      id: \"status_option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Delivered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Delivered\"), React.createElement(\"option\", {\n      value: \"Intransit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Intransit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"admin_submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"UPDATE \")));\n  }\n\n}\nexport default AdminEdit;","map":{"version":3,"sources":["/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/AdminEdit.jsx"],"names":["React","Component","AdminEdit","state","data","ord","userId","orderId","orderStatus","orderLocation","type","class","handleClickA","e","target","classList","value","dataCopy","setState","console","log","handleClickB","componentDidCatch","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport class AdminEdit extends Component {\n  state={\n          data:{\n              ord:{\n                userId: \"\",\n                orderId: \"\",\n                orderStatus:\"\",\n                orderLocation:\"\",\n                type:\"\"\n              },\n              class:\"closed\"\n\n          }\n  }\n\n\nhandleClickA=(e)=>{\n    if(this.state.data.class === 'closed' && e.target.classList.value === 'status_tog'){\n      const dataCopy = {...this.state.data};\n      dataCopy.class = \"open_status\";\n      this.setState({\n          data: dataCopy\n      });\n    }else if(this.state.data.class === 'open_status' && e.target.classList.value === 'status_tog'){\n      const dataCopy = {...this.state.data};\n      dataCopy.class = \"closed\";\n      this.setState({\n          data: dataCopy\n      });\n    }else{\n      console.log(\"ERROR IN CLASS CHANGE\")\n    }\n}\n\n\nhandleClickB=(e)=>{\n  if(this.state.data.class === 'closed' && e.target.classList.value === 'location_tog'){\n    const dataCopy = {...this.state.data};\n    dataCopy.class = \"open_location\";\n    this.setState({\n        data: dataCopy\n    });\n  }else if(this.state.data.class === 'open_location' && e.target.classList.value === 'location_tog'){\n    const dataCopy = {...this.state.data};\n    dataCopy.class = \"closed\";\n    this.setState({\n        data: dataCopy\n    });\n  }else{\n    console.log(\"ERROR IN CLASS CHANGE\")\n  }\n\n\n}\n\n\n componentDidCatch(){\n\n\n   // this.props.edit_on_form(this)\n\n\n\n/*\n  const dataCopy = {...this.state.data};\n  if(this.props.payload){\n    dataCopy.ord.ordId = this.props.payload.ordId;\n    dataCopy.ord.userId = this.props.payload.userIdentity;\n    switch(this.props.payload.type){\n      case 'statu':\n        dataCopy.ord.type  = 'status';\n        break;\n      case 'locatn': \n        dataCopy.ord.type  =  'location';\n        break;\n      default:\n        return\n    };\n      if(this.state.data.class = 'closed'){\n          const copydata = {...this.state.data};\n          copydata.class = 'open';\n        this.setState({ data: copydata})\n\n      }else if(this.state.data.class = 'open'){\n        const copydata = {...this.state.data};\n          copydata.class = 'closed';\n        this.setState({ data: copydata})\n      }\n      console.log(this.state)\n  } */\n\n}\n\n\n\n  render() {\n    return (\n      <div className=\"admin_edit\">\n        <div className=\"tog_button\">\n          <button className=\"status_tog\" onClick={this.handleClickA}>STATUS EDIT</button>\n          <button className=\"location_tog\" onClick={this.handleClickB}>LOCATION EDIT</button>\n        </div>\n        <form className={\"curent_location_form \"+ this.state.data.class} >\n          <label htmlFor=\"user_identity\">USER ID</label>\n          <input type=\"text\" placeholder=\"ENTER USER ID \" id=\"user_identity\"/>\n          <label htmlFor=\"order_new_location\">NEW LOCATION</label>\n          <input type=\"text\" placeholder=\"ENTER THE CURRENT LOCATION \" id=\"user_identity\"/>\n          <label htmlFor=\"order_identity\">ORDER ID</label>\n          <input type=\"text\" placeholder=\"ENTER USER ID \" id=\"user_identity\"/>\n          <button type=\"submit\" className=\"admin_submit\">UPDATE </button>\n        </form>\n        <form action=\"\" className={\"status_form \"+ this.state.data.class}>\n          <label htmlFor=\"user_ordr_f2\">USER ID</label>\n          <input type=\"text\" placeholder=\"ENTER USER ID\"/>\n          <label htmlFor=\"order_id_f2\">ORDER ID</label>\n          <input type=\"number\" placeholder=\"ENTER ORDER ID\"/>\n          <select name=\"\" id=\"status_option\">\n            <option value=\"Delivered\">Delivered</option>\n            <option value=\"Intransit\">Intransit</option>\n          </select>\n          <button type=\"submit\" className=\"admin_submit\">UPDATE </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AdminEdit\n"]},"metadata":{},"sourceType":"module"}