{"ast":null,"code":"import _objectSpread from \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/Adminlog.jsx\";\nimport React, { Component } from 'react';\nimport submitControl from '../controls/formControl';\nimport toastr from '../notification/Toastr'; //STYLES\n\nimport '../styles/Form.css';\n\nclass Adminlog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        user: {\n          email: \"\",\n          password: \"\"\n        },\n        chck: false\n      }\n    };\n\n    this.handleChange = e => {\n      const newData = _objectSpread({}, this.state.data);\n\n      newData.user[e.target.id] = e.target.value;\n      this.setState({\n        data: newData\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      submitControl(true, this);\n      fetch('https://s-i-api.herokuapp.com/api/v1/admin', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.user)\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n\n        if (data.valid === false) {\n          toastr(data.message);\n        } else if (data.valid === true) {\n          sessionStorage.setItem('adminToken', data.token);\n          console.log(data);\n        }\n      }).catch();\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"adminlog\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: 'yellowgreen'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"ADMIN SECTION !!!\"), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"EMAIL:\"), React.createElement(\"input\", {\n      id: \"email\",\n      type: \"text\",\n      onChange: this.handleChange,\n      placeholder: \"ENTER EMAIL\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"PASSWORD:\"), React.createElement(\"input\", {\n      id: \"password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      placeholder: \"ENTER PASSWORD\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      disabled: this.state.data.chck,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"LogIn\")));\n  }\n\n}\n\nexport default Adminlog;","map":{"version":3,"sources":["/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/Adminlog.jsx"],"names":["React","Component","submitControl","toastr","Adminlog","state","data","user","email","password","chck","handleChange","e","newData","target","id","value","setState","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","valid","message","sessionStorage","setItem","token","catch","componentDidMount","render","color"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport submitControl from '../controls/formControl';\nimport toastr from '../notification/Toastr';\n\n\n//STYLES\nimport '../styles/Form.css'\n\nclass Adminlog extends Component {\n\n  state={\n    data:{\n        user:{\n            email:\"\",\n            password:\"\"\n        },\n        chck:false\n    }\n};\n\n\n\nhandleChange=(e)=>{\n  const newData = {...this.state.data};\n  newData.user[e.target.id] = e.target.value;\n  this.setState({\n         data: newData \n  })\n  }\n\n  handleSubmit=(e)=>{\n    e.preventDefault();\n    submitControl(true, this);\n\n\n      fetch('https://s-i-api.herokuapp.com/api/v1/admin',{\n              method: \"POST\",\n              headers:{\n                  \"Content-Type\":\"application/json\",\n              },\n              body: JSON.stringify(this.state.user)\n    }).then(res=>{\n        return res.json()\n    }).then(data=>{\n      console.log(data)\n\n      if (data.valid === false){\n        toastr(data.message)\n    }   else if (data.valid === true){\n        sessionStorage.setItem('adminToken', data.token);\n        console.log(data);\n\n    }   \n\n    }).catch()\n\n\n\n\n  }\n\ncomponentDidMount(){\n\n\n}\n\n\n    render(){\n\n    return (\n      <div className=\"admin\">\n        <form className=\"adminlog\"  onSubmit={this.handleSubmit}>\n            <div>\n            <p style={{color: 'yellowgreen'}}>ADMIN SECTION !!!</p>\n            <label htmlFor=\"email\">EMAIL:</label>\n            <input id=\"email\" type=\"text\" onChange={this.handleChange} placeholder=\"ENTER EMAIL\" required/>\n            </div>\n            <div>\n            <label htmlFor=\"password\" >PASSWORD:</label>\n            <input id=\"password\" type=\"password\" onChange={this.handleChange} placeholder=\"ENTER PASSWORD\" required/>\n            </div>\n            <button disabled={this.state.data.chck} type=\"submit\">LogIn</button>\n        </form>\n      </div>\n    );\n    }\n  }\n  \n  export default Adminlog;\n  "]},"metadata":{},"sourceType":"module"}