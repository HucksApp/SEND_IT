{"ast":null,"code":"import _objectSpread from \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/Map.jsx\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport { NavLink } from 'react-router-dom';\nimport toastr from '../notification/Toastr';\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nclass orderMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        init_conditions: {\n          lat: 8.500000,\n          lng: 4.550000,\n          zoom: 14\n        },\n        accessories: {\n          showingInfoWindow: false,\n          activeMarker: {},\n          selectedPlace: {}\n        },\n        order: {\n          pickup_address: \"\",\n          destination_address: \"\"\n        }\n      }\n    };\n\n    this.handleMarkerClick = (props, marker, e) => {\n      const dataCopy = _objectSpread({}, this.state.data);\n\n      dataCopy.accessories.selectedPlace = props;\n      dataCopy.accessories.activeMarker = marker;\n      dataCopy.accessories.showingInfoWindow = true;\n      this.setState({\n        data: dataCopy\n      });\n    };\n\n    this.handleInfoClose = () => {\n      const copyData = _objectSpread({}, this.state.data);\n\n      if (this.state.data.accessories.showingInfoWindow) {\n        copyData.accessories.showingInfoWindow = false;\n        copyData.accessories.activeMarker = null;\n        this.setState({\n          data: copyData\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const token = sessionStorage.getItem('token');\n\n    if (!token) {\n      toastr.warning('YOU ARE NOT SIGNED IN');\n      this.props.history.push('/login');\n    } else if (token) {\n      const id = this.props.match.params.id;\n      console.log(this.props, id);\n      fetch('https://s-i-api.herokuapp.com/api/v1/map?ordCk=' + queryId, {\n        method: \"GET\",\n        headers: {\n          Authorization: token\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"WAREHOUSE,  PICKUP ADDRESS, DESTINATION ADDRESS\"), React.createElement(Map, {\n      style: mapStyles,\n      google: this.props.google,\n      initialCenter: {\n        lat: this.state.data.init_conditions.lat,\n        lng: this.state.data.init_conditions.lng\n      },\n      zoom: this.state.data.init_conditions.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.handleMarkerClick,\n      name: 'PAKAGE WAREHOUSE',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.data.accessories.activeMarker,\n      visible: this.state.data.accessories.showingInfoWindow,\n      onClose: this.handleInfoClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.data.accessories.selectedPlace.name))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDoduk96MV36i6RJFgvo80FqZTFBZj2k1M'\n})(orderMap);","map":{"version":3,"sources":["/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/Map.jsx"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","NavLink","toastr","mapStyles","width","height","orderMap","state","data","init_conditions","lat","lng","zoom","accessories","showingInfoWindow","activeMarker","selectedPlace","order","pickup_address","destination_address","handleMarkerClick","props","marker","e","dataCopy","setState","handleInfoClose","copyData","componentDidMount","token","sessionStorage","getItem","warning","history","push","id","match","params","console","log","fetch","queryId","method","headers","Authorization","then","res","json","render","google","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper,InfoWindow, Marker } from 'google-maps-react';\nimport { NavLink } from 'react-router-dom';\nimport toastr from '../notification/Toastr';\n\n\nconst mapStyles = {\n    width: '100%',\n    height: '100%'\n  };\n\n\nclass orderMap extends Component {\n\n    state={\n            data:{\n                init_conditions:{\n                    lat: 8.500000,\n                    lng: 4.550000,\n                    zoom: 14,\n                },\n                accessories:{\n                    showingInfoWindow: false,\n                    activeMarker: {}, \n                    selectedPlace: {}\n                },\n                order:{\n                        pickup_address: \"\",\n                        destination_address: \"\"\n                }\n            }\n    };\n\ncomponentDidMount(){\nconst token = sessionStorage.getItem('token');\nif(!token){\n    toastr.warning('YOU ARE NOT SIGNED IN');\n        this.props.history.push('/login');\n}else if (token){\n\n        const id=this.props.match.params.id;\n        console.log(this.props, id)\n\n    fetch('https://s-i-api.herokuapp.com/api/v1/map?ordCk='+queryId,{\n                method:\"GET\",\n                headers:{ \n                Authorization : token\n                }\n\n} ).then(res=>{\n    return res.json();\n}).then(data=>{\n    console.log(data)\n})\n\n}\n\n\n}\n\n\n\nhandleMarkerClick= (props, marker, e) =>{ \n    const dataCopy = {...this.state.data};\n        dataCopy.accessories.selectedPlace = props;\n        dataCopy.accessories.activeMarker = marker;\n        dataCopy.accessories.showingInfoWindow = true;\n        this.setState({\n            data: dataCopy\n        })\n}\n\n\nhandleInfoClose=()=>{\n   const copyData = {...this.state.data};\n   if(this.state.data.accessories.showingInfoWindow){\n    copyData.accessories.showingInfoWindow = false;\n    copyData.accessories.activeMarker = null;\n    this.setState({\n                data: copyData\n    })\n\n   } \n}\n\n\n  render() {\n    return (\n        <div>\n            <h4>WAREHOUSE,  PICKUP ADDRESS, DESTINATION ADDRESS</h4>\n            <Map style={mapStyles} \n            google={this.props.google}\n            initialCenter={{lat: this.state.data.init_conditions.lat,\n            lng: this.state.data.init_conditions.lng}}\n            zoom={this.state.data.init_conditions.zoom}>\n                <Marker onClick={this.handleMarkerClick} name={'PAKAGE WAREHOUSE'} />\n                <InfoWindow marker={this.state.data.accessories.activeMarker}\n                visible={this.state.data.accessories.showingInfoWindow} onClose={this.handleInfoClose} >\n                        <div>{this.state.data.accessories.selectedPlace.name}</div>\n                </InfoWindow>\n            </Map>\n            </div>\n\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n            apiKey: 'AIzaSyDoduk96MV36i6RJFgvo80FqZTFBZj2k1M'\n        })(orderMap)\n"]},"metadata":{},"sourceType":"module"}