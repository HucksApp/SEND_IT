{"ast":null,"code":"import _objectSpread from \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/Orders.jsx\";\nimport React, { Component } from 'react';\nimport toastr from '../notification/Toastr'; //COMPONENTS\n\nimport Order from './Order';\nimport EditDestination from './EditDestination';\nimport CreateOrder from './CreateOrder';\nexport class Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        orderList: [],\n        showEdit: \"close\",\n        showCreate: \"close\"\n      }\n    };\n\n    this.handleUpdateOrder = data => {\n      const date = Date.now();\n      const dateObj = new Date(date);\n      const day = dateObj.getDate();\n      const month = dateObj.getMonth();\n      const year = dateObj.getFullYear();\n      const dateString = `${year}-${month}-${day} T `;\n\n      const dataCopy = _objectSpread({}, this.state.data);\n\n      data.date = dateString;\n      const newOrder = {\n        receiver_name: data.receiverName,\n        receiver_phone_no: data.receiverPhoneNumber,\n        pickup_address: data.pickupAddress,\n        destination_address: data.destinationAddress,\n        order_date: data.date,\n        c_location: 'Newly Processed',\n        status: 'InTransit'\n      };\n      const newList = [...dataCopy.orderList, newOrder];\n      dataCopy.orderList = newList;\n      this.setState({\n        data: dataCopy\n      });\n      const token = sessionStorage.getItem('token');\n      const dataTrans = {\n        dataCopy\n      };\n      dataTrans.date = date;\n      fetch('https://s-i-api.herokuapp.com/api/v1/new_order', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        },\n        body: JSON.stringify(dataTrans)\n      }).then(res => {\n        toastr.success(\"NEW ORDER ADDED TO ORDER LIST\");\n      });\n    };\n\n    this.handleClickCreate = () => {\n      const newData = _objectSpread({}, this.state.data);\n\n      if (newData.showCreate === \"close\") {\n        newData.showCreate = \"open\";\n        this.setState({\n          data: newData\n        });\n      } else if (newData.showCreate === \"open\") {\n        newData.showCreate = \"close\";\n        this.setState({\n          data: newData\n        });\n      }\n    };\n\n    this.handleClickEdit = () => {\n      const newData = _objectSpread({}, this.state.data);\n\n      if (newData.showEdit === \"close\") {\n        newData.showEdit = \"open\";\n        this.setState({\n          data: newData\n        });\n      } else if (newData.showEdit === \"open\") {\n        newData.showEdit = \"close\";\n        this.setState({\n          data: newData\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const token = sessionStorage.getItem('token');\n\n    if (!token) {\n      toastr.Warning(\"YOU ARE NOT LOGGED IN\");\n      this.props.history.push('/login');\n    } else if (token) {\n      fetch('https://s-i-api.herokuapp.com/api/v1/order', {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        if (data.length === 0) {\n          toastr.info('YOUR ORDERS LISTS IS STILL EMPTY');\n        } else {\n          const newData = _objectSpread({}, this.state.data);\n\n          newData.orderList = data;\n          this.setState({\n            data: newData\n          });\n          console.log(this.state);\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"orders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"orders-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"LIST OF ORDERS AND DELIVERY DETAILS\"), React.createElement(Order, {\n      orderList: this.state.data.orderList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClickEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"EDIT DESTINATION\"), React.createElement(\"button\", {\n      onClick: this.handleClickCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"CREATE ORDER\"), React.createElement(EditDestination, {\n      show: this.state.data.showEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(CreateOrder, {\n      show: this.state.data.showCreate,\n      updateOrder: this.handleUpdateOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Orders;","map":{"version":3,"sources":["/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/Orders.jsx"],"names":["React","Component","toastr","Order","EditDestination","CreateOrder","Orders","state","data","orderList","showEdit","showCreate","handleUpdateOrder","date","Date","now","dateObj","day","getDate","month","getMonth","year","getFullYear","dateString","dataCopy","newOrder","receiver_name","receiverName","receiver_phone_no","receiverPhoneNumber","pickup_address","pickupAddress","destination_address","destinationAddress","order_date","c_location","status","newList","setState","token","sessionStorage","getItem","dataTrans","fetch","method","headers","Authorization","body","JSON","stringify","then","res","success","handleClickCreate","newData","handleClickEdit","componentDidMount","Warning","props","history","push","json","length","info","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport toastr from '../notification/Toastr'\n\n//COMPONENTS\nimport Order from './Order';\nimport EditDestination from './EditDestination';\nimport CreateOrder from './CreateOrder';\n\nexport class Orders extends Component {\n\nstate = { \n    data:{\n        orderList:[],\n        showEdit:\"close\",\n        showCreate:\"close\"\n\n\n    },\n};\n\n\n\ncomponentDidMount(){\nconst token = sessionStorage.getItem('token');\nif(!token){\n    toastr.Warning(\"YOU ARE NOT LOGGED IN\");\n    this.props.history.push('/login');\n\n}else if(token){\n\n    fetch('https://s-i-api.herokuapp.com/api/v1/order',{\n\n        headers:{\n            Authorization: token\n        }\n\n    }).then(res=>{return res.json()})\n    .then(data=>{\n        if(data.length === 0){\n\n            toastr.info('YOUR ORDERS LISTS IS STILL EMPTY')\n\n        }else {\n\n            const newData = {...this.state.data};\n            newData.orderList = data;\n            this.setState({\n                data: newData\n            });\n\n            console.log(this.state)\n\n        }\n       \n    })\n\n\n}\n\n\n};\n\nhandleUpdateOrder=(data)=>{\n    const date = Date.now();\n    const dateObj= new Date(date) \n    const day = dateObj.getDate();\n    const month = dateObj.getMonth();\n    const year = dateObj.getFullYear();\n    const dateString = `${year}-${month}-${day} T `\n\n    const dataCopy = {...this.state.data};\n    data.date = dateString;\n    const newOrder = {\n                receiver_name: data.receiverName,\n                receiver_phone_no: data.receiverPhoneNumber,\n                pickup_address: data.pickupAddress,\n                destination_address: data.destinationAddress,\n                order_date: data.date,\n                c_location:'Newly Processed',\n                status:'InTransit'\n    };\n\n    const newList = [...dataCopy.orderList,newOrder];\n                dataCopy.orderList = newList;\n\n\n\n    this.setState({\n            data: dataCopy\n    })\n    const token = sessionStorage.getItem('token');\n    const dataTrans = { dataCopy}\n        dataTrans.date = date;\n        fetch('https://s-i-api.herokuapp.com/api/v1/new_order',{\n            method:\"POST\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                Authorization: token\n            },\n            body:JSON.stringify(dataTrans)\n        })\n            .then(res=>{\n                toastr.success(\"NEW ORDER ADDED TO ORDER LIST\")\n            })\n\n\n}\n\n\n\n\n\n\n\nhandleClickCreate=()=>{\n\n    const newData = {...this.state.data};\n    if(newData.showCreate === \"close\"){\n    newData.showCreate=\"open\";\n    this.setState({\n        data: newData\n    });\n}else if(newData.showCreate === \"open\"){\n    newData.showCreate =\"close\";\n    this.setState({\n        data: newData\n    });\n}\n\n}\n\n\n\n\n\n\nhandleClickEdit=()=>{\n\n    const newData = {...this.state.data};\n    if(newData.showEdit === \"close\"){\n    newData.showEdit=\"open\";\n    this.setState({\n        data: newData\n    });\n}else if(newData.showEdit === \"open\"){\n    newData.showEdit=\"close\";\n    this.setState({\n        data: newData\n    });\n}\n\n}\n\n\n\n  render() {\n    return (\n      <div className=\"orders\">\n            <h3 className=\"orders-title\">LIST OF ORDERS AND DELIVERY DETAILS</h3>\n            <Order orderList={this.state.data.orderList}  />\n            <button onClick={this.handleClickEdit} >EDIT DESTINATION</button>\n            <button  onClick={this.handleClickCreate}>CREATE ORDER</button>\n            <EditDestination  show={this.state.data.showEdit}/>\n            <CreateOrder show={this.state.data.showCreate} updateOrder={this.handleUpdateOrder} />\n        \n            \n      </div>\n    )\n  }\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}