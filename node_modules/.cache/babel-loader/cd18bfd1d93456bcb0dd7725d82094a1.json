{"ast":null,"code":"import _objectSpread from \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/AdminEdit.jsx\";\nimport React, { Component } from 'react';\nexport class AdminEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        ord: {\n          userId: \"\",\n          orderId: \"\",\n          orderStatus: \"\",\n          orderLocation: \"\",\n          type: \"\"\n        },\n        class: \"closed\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    const dataCopy = _objectSpread({}, this.state.data);\n\n    if (this.props.payload) {\n      dataCopy.ord.ordId = this.props.payload.ordId;\n      dataCopy.ord.userId = this.props.payload.userIdentity;\n\n      switch (this.props.payload.type) {\n        case 'statu':\n          dataCopy.ord.type = 'status';\n          break;\n\n        case 'locatn':\n          dataCopy.ord.type = 'location';\n          break;\n\n        default:\n          return;\n      }\n\n      ;\n\n      if (this.state.data.class = 'closed') {\n        const copydata = _objectSpread({}, this.state.data);\n\n        copydata.class = 'open';\n        this.setState({\n          data: copydata\n        });\n      } else if (this.state.data.class = 'open') {\n        const copydata = _objectSpread({}, this.state.data);\n\n        copydata.class = 'closed';\n        this.setState({\n          data: copydata\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"admin_edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"curent_location_form \" + this.props.payload.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"user_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"USER ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ENTER USER ID \",\n      id: \"user_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"order_new_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"NEW LOCATION\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ENTER THE CURRENT LOCATION \",\n      id: \"user_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"order_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"ORDER ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ENTER USER ID \",\n      id: \"user_identity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"admin_submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"UPDATE \")), React.createElement(\"form\", {\n      action: \"\",\n      className: \"status_form \" + this.state.data.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"user_ordr_f2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"USER ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ENTER USER ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"order_id_f2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"ORDER ID\"), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"ENTER ORDER ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"\",\n      id: \"status_option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Delivered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Delivered\"), React.createElement(\"option\", {\n      value: \"Intransit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Intransit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"admin_submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"UPDATE \")));\n  }\n\n}\nexport default AdminEdit;","map":{"version":3,"sources":["/Users/Ahrabprince/Desktop/APPS/s-i-react/s-i-react/src/components/AdminEdit.jsx"],"names":["React","Component","AdminEdit","state","data","ord","userId","orderId","orderStatus","orderLocation","type","class","componentDidMount","dataCopy","props","payload","ordId","userIdentity","copydata","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport class AdminEdit extends Component {\n  state={\n          data:{\n              ord:{\n                userId: \"\",\n                orderId: \"\",\n                orderStatus:\"\",\n                orderLocation:\"\",\n                type:\"\"\n              },\n              class:\"closed\"\n\n          }\n  }\n\ncomponentDidMount(){\n\n  const dataCopy = {...this.state.data};\n  if(this.props.payload){\n    dataCopy.ord.ordId = this.props.payload.ordId;\n    dataCopy.ord.userId = this.props.payload.userIdentity;\n    switch(this.props.payload.type){\n      case 'statu':\n        dataCopy.ord.type  = 'status';\n        break;\n      case 'locatn': \n        dataCopy.ord.type  =  'location';\n        break;\n      default:\n        return\n    };\n      if(this.state.data.class = 'closed'){\n          const copydata = {...this.state.data};\n          copydata.class = 'open';\n        this.setState({ data: copydata})\n\n      }else if(this.state.data.class = 'open'){\n        const copydata = {...this.state.data};\n          copydata.class = 'closed';\n        this.setState({ data: copydata})\n      }\n\n  } \n\n}\n\n\n\n  render() {\n    return (\n      <div className=\"admin_edit\">\n        <form className={\"curent_location_form \"+ this.props.payload.class} >\n          <label htmlFor=\"user_identity\">USER ID</label>\n          <input type=\"text\" placeholder=\"ENTER USER ID \" id=\"user_identity\"/>\n          <label htmlFor=\"order_new_location\">NEW LOCATION</label>\n          <input type=\"text\" placeholder=\"ENTER THE CURRENT LOCATION \" id=\"user_identity\"/>\n          <label htmlFor=\"order_identity\">ORDER ID</label>\n          <input type=\"text\" placeholder=\"ENTER USER ID \" id=\"user_identity\"/>\n          <button type=\"submit\" className=\"admin_submit\">UPDATE </button>\n        </form>\n        <form action=\"\" className={\"status_form \"+ this.state.data.class}>\n          <label htmlFor=\"user_ordr_f2\">USER ID</label>\n          <input type=\"text\" placeholder=\"ENTER USER ID\"/>\n          <label htmlFor=\"order_id_f2\">ORDER ID</label>\n          <input type=\"number\" placeholder=\"ENTER ORDER ID\"/>\n          <select name=\"\" id=\"status_option\">\n            <option value=\"Delivered\">Delivered</option>\n            <option value=\"Intransit\">Intransit</option>\n          </select>\n          <button type=\"submit\" className=\"admin_submit\">UPDATE </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AdminEdit\n"]},"metadata":{},"sourceType":"module"}